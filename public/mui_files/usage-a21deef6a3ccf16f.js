(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[72786],{468073:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return f}});var e,t,o=a(827378),c=a.t(o,2),p=a(30733),i=a(187055),r=a(765433),l=a(114610),u=a(248499),d=a(137762),k=a(824246),m=(0,l.Z)({cssVarPrefix:"md-demo"}),h={en:{description:"Learn how to use the experimental APIs to adopt CSS theme variables.",location:"/docs/data/material/experimental-api/css-theme-variables/usage/usage.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M5.025 14H6.95c.183 0 .35-.029.5-.087a1.24 1.24 0 0 0 .425-.288L13.65 7.9a.622.622 0 0 0 .2-.45.622.622 0 0 0-.2-.45l-2.3-2.3a.622.622 0 0 0-.45-.2.622.622 0 0 0-.45.2l-5.725 5.775a1.24 1.24 0 0 0-.287.425 1.37 1.37 0 0 0-.088.5v1.925c0 .184.067.342.2.475a.65.65 0 0 0 .475.2Zm5.325 0h5.725c.367 0 .68-.129.938-.387.258-.258.387-.57.387-.938 0-.366-.13-.679-.387-.937a1.277 1.277 0 0 0-.938-.388H13L10.35 14Zm-5.5 4.4-2.4 2.4c-.417.417-.896.509-1.437.275C.47 20.842.2 20.434.2 19.85V3.55c0-.733.258-1.358.775-1.875A2.554 2.554 0 0 1 2.85.9h16.3c.733 0 1.358.259 1.875.775.517.517.775 1.142.775 1.875v12.2c0 .734-.258 1.359-.775 1.875a2.554 2.554 0 0 1-1.875.775H4.85Z"/>\n      </symbol>\n      </svg>','<h1>CSS theme variables - Usage</h1><p class="description">Learn how to use the experimental APIs to adopt CSS theme variables.</p>\n\n<h2 id="getting-started">Getting started<a aria-labelledby="getting-started" class="anchor-link" href="#getting-started" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="getting-started"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The CSS variables API relies on a new experimental provider for the theme called <code>Experimental_CssVarsProvider</code> to inject styles into Material UI components.\nIn addition to providing the theme in the inner React context, this new provider also generates CSS variables out of all tokens in the theme that are not functions, and makes them available in the context as well.</p>\n<p>Once the <code>App</code> renders on the screen, you will see the CSS theme variables in the html <code>:root</code> stylesheet.\nThe variables are flattened and prefixed with <code>--mui</code> by default:</p>\n<div class="MuiCode-root"><pre><code class="language-css"><span class="token comment">/* generated global stylesheet */</span>\n<span class="token selector">:root</span> <span class="token punctuation">{</span>\n  <span class="token property">--mui-palette-primary-main</span><span class="token punctuation">:</span> #1976d2<span class="token punctuation">;</span>\n  <span class="token property">--mui-palette-primary-light</span><span class="token punctuation">:</span> #42a5f5<span class="token punctuation">;</span>\n  <span class="token property">--mui-palette-primary-dark</span><span class="token punctuation">:</span> #1565c0<span class="token punctuation">;</span>\n  <span class="token property">--mui-palette-primary-contrastText</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token comment">/* ...other variables */</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>The following demo uses <code>--md-demo</code> as a prefix for the variables:</p>\n',{demo:"CssVarsBasic.js",defaultCodeOpen:!0},'<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>The <code>CssVarsProvider</code> is built on top of the <a href="/material-ui/customization/theming/#themeprovider"><code>ThemeProvider</code></a> with extra features like CSS variable generation, storage synchronization, unlimited color schemes, and more.</p>\n\n</div></aside><h2 id="toggle-between-light-and-dark-mode">Toggle between light and dark mode<a aria-labelledby="toggle-between-light-and-dark-mode" class="anchor-link" href="#toggle-between-light-and-dark-mode" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="toggle-between-light-and-dark-mode"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The <code>useColorScheme</code> hook lets you read and update the user-selected mode:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  Experimental_CssVarsProvider <span class="token keyword">as</span> CssVarsProvider<span class="token punctuation">,</span>\n  useColorScheme<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ModeSwitcher is an example interface for toggling between modes.</span>\n<span class="token comment">// Material UI does not provide the toggle interface—you have to build it yourself.</span>\n<span class="token keyword">const</span> <span class="token function-variable function">ModeSwitcher</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> mode<span class="token punctuation">,</span> setMode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useColorScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>mounted<span class="token punctuation">,</span> setMounted<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setMounted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// for server-side rendering</span>\n    <span class="token comment">// learn more at https://github.com/pacocoursey/next-themes#avoid-hydration-mismatch</span>\n    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n      <span class="token attr-name">variant</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outlined<span class="token punctuation">"</span></span>\n      <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">\'light\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token function">setMode</span><span class="token punctuation">(</span><span class="token string">\'dark\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n          <span class="token function">setMode</span><span class="token punctuation">(</span><span class="token string">\'light\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>mode <span class="token operator">===</span> <span class="token string">\'light\'</span> <span class="token operator">?</span> <span class="token string">\'Dark\'</span> <span class="token operator">:</span> <span class="token string">\'Light\'</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ModeSwitcher</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CssVarsProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="using-theme-variables">Using theme variables<a aria-labelledby="using-theme-variables" class="anchor-link" href="#using-theme-variables" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="using-theme-variables"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>All of these variables are accessible in an object in the theme called <code>vars</code>.\nThe structure of this object is nearly identical to the theme structure, the only difference is that the values represent CSS variables.</p>\n<ul>\n<li><p><code>theme.vars</code> (recommended): an object that refers to the CSS theme variables.</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token keyword">const</span> Button <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token comment">// var(--mui-palette-primary-main)</span>\n  <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>contrastText<span class="token punctuation">,</span> <span class="token comment">// var(--mui-palette-primary-contrastText)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>For <strong>TypeScript</strong>, the typings are not enabled by default.\nFollow the <a href="#typescript">TypeScript setup</a> to enable the typings.</p>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>Make sure that the components accessing <code>theme.vars.*</code> are rendered under the new provider, otherwise you will get a <code>TypeError</code>.</p>\n\n</div></aside></li>\n<li><p><strong>Native CSS</strong>: if you can&#39;t access the theme object, e.g. in a pure CSS file, you can use <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/var"><code>var()</code></a> directly:</p>\n<div class="MuiCode-root"><pre><code class="language-css"><span class="token comment">/* external-scope.css */</span>\n<span class="token selector">.external-section</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--mui-palette-grey-50<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-warning">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#warning-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>If you have set up a <a href="/material-ui/experimental-api/css-theme-variables/customization/#changing-variable-prefixes">custom prefix</a>, make sure to replace the default <code>--mui</code>.</p>\n\n</div></aside></li>\n</ul>\n<h2 id="server-side-rendering">Server-side rendering<a aria-labelledby="server-side-rendering" class="anchor-link" href="#server-side-rendering" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="server-side-rendering"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Place <code>getInitColorSchemeScript()</code> before the <code>&lt;Main /&gt;</code> tag to prevent the dark-mode SSR flickering during the hydration phase.</p>\n<h3 id="next-js-pages-router">Next.js Pages Router<a aria-labelledby="next-js-pages-router" class="anchor-link" href="#next-js-pages-router" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="next-js-pages-router"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>Add the following code to the custom <a href="https://nextjs.org/docs/pages/building-your-application/routing/custom-document"><code>pages/_document.js</code></a> file:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> Document<span class="token punctuation">,</span> <span class="token punctuation">{</span> Html<span class="token punctuation">,</span> Head<span class="token punctuation">,</span> Main<span class="token punctuation">,</span> NextScript <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'next/document\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> getInitColorSchemeScript <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">MyDocument</span> <span class="token keyword">extends</span> <span class="token class-name">Document</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Html</span></span> <span class="token attr-name">data-color-scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Head</span></span><span class="token punctuation">></span></span><span class="token operator">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Head</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token function">getInitColorSchemeScript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Main</span></span> <span class="token punctuation">/></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NextScript</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Html</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="typescript">TypeScript<a aria-labelledby="typescript" class="anchor-link" href="#typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The theme variables type is not enabled by default. You need to import the module augmentation to enable the typings:</p>\n<div class="MuiCode-root"><pre><code class="language-ts"><span class="token comment">// The import can be in any file that is included in your `tsconfig.json`</span>\n<span class="token keyword">import</span> type <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/themeCssVarsAugmentation\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StyledComponent <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> theme <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// ✅ typed-safe</span>\n  color<span class="token operator">:</span> theme<span class="token punctuation">.</span>vars<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<h2 id="api">API<a aria-labelledby="api" class="anchor-link" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="api"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><h3 id="cssvarsprovider-gt-props"><code>&lt;CssVarsProvider&gt;</code> props<a aria-labelledby="cssvarsprovider-gt-props" class="anchor-link" href="#cssvarsprovider-gt-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="cssvarsprovider-gt-props"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>defaultMode?: &#39;light&#39; | &#39;dark&#39; | &#39;system&#39;</code> - Application&#39;s default mode (<code>light</code> by default)</li>\n<li><code>disableTransitionOnChange : boolean</code> - Disable CSS transitions when switching between modes</li>\n<li><code>theme: ThemeInput</code> - the theme provided to React&#39;s context</li>\n<li><code>modeStorageKey?: string</code> - localStorage key used to store application <code>mode</code></li>\n<li><code>attribute?: string</code> - DOM attribute for applying color scheme</li>\n</ul>\n<h3 id="usecolorscheme-colorschemecontextvalue"><code>useColorScheme: () =&gt; ColorSchemeContextValue</code><a aria-labelledby="usecolorscheme-colorschemecontextvalue" class="anchor-link" href="#usecolorscheme-colorschemecontextvalue" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="usecolorscheme-colorschemecontextvalue"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><ul>\n<li><code>mode: string</code> - The user&#39;s selected mode</li>\n<li><code>setMode: mode =&gt; {…}</code> - Function for setting the <code>mode</code>. The <code>mode</code> is saved to internal state and local storage; if <code>mode</code> is null, it will be reset to the default mode</li>\n</ul>\n<h3 id="getinitcolorschemescript-options-react-reactelement"><code>getInitColorSchemeScript: (options) =&gt; React.ReactElement</code><a aria-labelledby="getinitcolorschemescript-options-react-reactelement" class="anchor-link" href="#getinitcolorschemescript-options-react-reactelement" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="getinitcolorschemescript-options-react-reactelement"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p><strong>options</strong></p>\n<ul>\n<li><code>defaultMode?: &#39;light&#39; | &#39;dark&#39; | &#39;system&#39;</code>: - Application&#39;s default mode before React renders the tree (<code>light</code> by default)</li>\n<li><code>modeStorageKey?: string</code>: - localStorage key used to store application <code>mode</code></li>\n<li><code>attribute?: string</code> - DOM attribute for applying color scheme</li>\n</ul>\n'],toc:[{text:"Getting started",level:2,hash:"getting-started",children:[]},{text:"Toggle between light and dark mode",level:2,hash:"toggle-between-light-and-dark-mode",children:[]},{text:"Using theme variables",level:2,hash:"using-theme-variables",children:[]},{text:"Server-side rendering",level:2,hash:"server-side-rendering",children:[{text:"Next.js Pages Router",level:3,hash:"next-js-pages-router"}]},{text:"TypeScript",level:2,hash:"typescript",children:[]},{text:"API",level:2,hash:"api",children:[{text:"&lt;CssVarsProvider&gt; props",level:3,hash:"cssvarsprovider-gt-props"},{text:"useColorScheme: () =&gt; ColorSchemeContextValue",level:3,hash:"usecolorscheme-colorschemecontextvalue"},{text:"getInitColorSchemeScript: (options) =&gt; React.ReactElement",level:3,hash:"getinitcolorschemescript-options-react-reactelement"}]}],title:"CSS theme variables - Usage",headers:{components:[]}}},g={"CssVarsBasic.js":{module:"./CssVarsBasic.js",raw:"import * as React from 'react';\nimport {\n  experimental_extendTheme as extendTheme,\n  Experimental_CssVarsProvider as CssVarsProvider,\n} from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = extendTheme({\n  cssVarPrefix: 'md-demo',\n});\n\nexport default function CssVarsBasic() {\n  return (\n    <CssVarsProvider theme={theme}>\n      <Button variant=\"contained\">Hello world</Button>\n    </CssVarsProvider>\n  );\n}\n",jsxPreview:'<CssVarsProvider theme={theme}>\n  <Button variant="contained">Hello world</Button>\n</CssVarsProvider>',moduleTS:"./CssVarsBasic.js",rawTS:"import * as React from 'react';\nimport {\n  experimental_extendTheme as extendTheme,\n  Experimental_CssVarsProvider as CssVarsProvider,\n} from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nconst theme = extendTheme({\n  cssVarPrefix: 'md-demo',\n});\n\nexport default function CssVarsBasic() {\n  return (\n    <CssVarsProvider theme={theme}>\n      <Button variant=\"contained\">Hello world</Button>\n    </CssVarsProvider>\n  );\n}\n"}};g.scope={process:{},import:{react:c,"@mui/material/styles":i,"@mui/material/Button":r}};var v={"./CssVarsBasic.js":function(){return e||(e=(0,k.jsx)(u.CM,{theme:m,children:(0,k.jsx)(d.Z,{variant:"contained",children:"Hello world"})}))}};function f(){return t||(t=(0,k.jsx)(p.Z,{demos:g,docs:h,demoComponents:v}))}},30733:function(n,s,a){"use strict";a.d(s,{Z:function(){return b}});var e,t=a(295649),o=a(827378),c=a(723615),p=a.n(c),i=a(686677),r=a(486925),l=a(228319),u=a(791963),d=a(807716),k=a(5105),m=a(274087),h=a(957904),g=a(853403),v=a(54775),f=a(824246);function y(n){var s=n.mode,a=(0,l.tv)().setMode;return o.useEffect(function(){a(s)},[s,a]),null}function b(n){var s=(0,r.Z)(),a=(0,i.useRouter)(),c=(0,d.ln)(a.asPath).canonicalAs,p=n.disableAd,b=void 0!==p&&p,x=n.disableToc,C=n.disableCssVarsProvider,w=n.demos,S=void 0===w?{}:w,M=n.docs,Z=n.demoComponents,P=n.srcComponents,T=M[(0,m.useUserLanguage)()]||M.en,V=c.startsWith("/joy-ui/")&&!(void 0!==C&&C),j=V?l.lL:o.Fragment,B=V?h.default:o.Fragment,H=(0,t.Z)({},V&&{mode:s.palette.mode});return(0,f.jsxs)(k.Z,{description:T.description,disableAd:b,disableToc:void 0!==x&&x,location:T.location,title:T.title,toc:T.toc,children:[b?null:e||(e=(0,f.jsx)(h.default,{children:(0,f.jsx)(v.Z,{children:(0,f.jsx)(g.ZP,{})})})),(0,f.jsxs)(j,{children:[V&&(0,f.jsx)(y,{mode:s.palette.mode}),T.rendered.map(function(n,a){return(0,f.jsx)(u.Z,{demoComponents:Z,demos:S,disableAd:b,localizedDoc:T,renderedMarkdownOrDemo:n,srcComponents:P,theme:s,WrapperComponent:B,wrapperProps:H},"demos-section-".concat(a))})]})]})}y.propTypes={mode:p().oneOf(["light","dark"])}},765433:function(n,s,a){"use strict";a.r(s),a.d(s,{buttonClasses:function(){return t.Z},default:function(){return e.Z},getButtonUtilityClass:function(){return t.F}});var e=a(137762),t=a(668623)},567146:function(n,s,a){"use strict";a.r(s),a.d(s,{alignProperty:function(){return l},convertLength:function(){return r},fontGrid:function(){return u},getUnit:function(){return p},isUnitless:function(){return c},responsiveProperty:function(){return d},toUnitless:function(){return i}});var e=a(957379),t=a(42302),o=a.n(t);function c(n){return String(o()(n)).length===String(n).length}function p(n){return String(n).match(/[\d.\-+]*\s*(.*)/)[1]||""}function i(n){return o()(n)}function r(n){return function(s,a){var e=p(s);if(e===a)return s;var t=i(s);"px"!==e&&("em"===e?t=i(s)*i(n):"rem"===e&&(t=i(s)*i(n)));var c=t;if("px"!==a){if("em"===a)c=t/i(n);else{if("rem"!==a)return s;c=t/i(n)}}return o()(c.toFixed(5))+a}}function l(n){var s=n.size,a=n.grid,e=s-s%a,t=e+a;return s-e<t-s?e:t}function u(n){var s=n.lineHeight;return n.pixels/(s*n.htmlFontSize)}function d(n){var s=n.cssProperty,a=n.min,t=n.max,o=n.unit,c=void 0===o?"rem":o,p=n.breakpoints,i=void 0===p?[600,900,1200]:p,r=n.transform,l=void 0===r?null:r,u=(0,e.Z)({},s,"".concat(a).concat(c)),d=(t-a)/i[i.length-1];return i.forEach(function(n){var t=a+d*n;null!==l&&(t=l(t)),u["@media (min-width:".concat(n,"px)")]=(0,e.Z)({},s,"".concat(Math.round(1e4*t)/1e4).concat(c))}),u}},187055:function(n,s,a){"use strict";a.r(s),a.d(s,{Experimental_CssVarsProvider:function(){return A.CM},StyledEngineProvider:function(){return V.Z},THEME_ID:function(){return t.Z},ThemeProvider:function(){return T.Z},adaptV4Theme:function(){return m},alpha:function(){return h.Fq},createMuiTheme:function(){return v.A},createStyles:function(){return x},createTheme:function(){return v.Z},css:function(){return g.css},darken:function(){return h._j},decomposeColor:function(){return h.tB},duration:function(){return S.x9},easing:function(){return S.Ui},emphasize:function(){return h._4},experimentalStyled:function(){return P.ZP},experimental_extendTheme:function(){return _.Z},experimental_sx:function(){return U},getContrastRatio:function(){return h.mi},getInitColorSchemeScript:function(){return A.JO},getLuminance:function(){return h.H3},getOverlayAlpha:function(){return R.Z},hexToRgb:function(){return h.oo},hslToRgb:function(){return h.ve},keyframes:function(){return g.keyframes},lighten:function(){return h.$n},makeStyles:function(){return j},private_createTypography:function(){return I.Z},private_excludeVariablesFromRoot:function(){return z.Z},recomposeColor:function(){return h.wy},responsiveFontSizes:function(){return w.Z},rgbToHex:function(){return h.vq},shouldSkipGeneratingVar:function(){return E.Z},styled:function(){return P.ZP},unstable_createMuiStrictModeTheme:function(){return y},unstable_getUnit:function(){return C.getUnit},unstable_toUnitless:function(){return C.toUnitless},useColorScheme:function(){return A.tv},useTheme:function(){return M.Z},useThemeProps:function(){return Z.Z},withStyles:function(){return B},withTheme:function(){return H}});var e=a(117040),t=a(156827),o=a(957379),c=a(295649),p=a(481936),i=a(696138),r=a.n(i),l=a(999938),u=a(847411),d=["defaultProps","mixins","overrides","palette","props","styleOverrides"],k=["type","mode"];function m(n){var s=n.defaultProps,a=void 0===s?{}:s,e=n.mixins,t=void 0===e?{}:e,i=n.overrides,m=void 0===i?{}:i,h=n.palette,g=void 0===h?{}:h,v=n.props,f=void 0===v?{}:v,y=n.styleOverrides,b=void 0===y?{}:y,x=(0,p.Z)(n,d),C=(0,c.Z)((0,c.Z)({},x),{},{components:{}});r()(a).forEach(function(n){var s=C.components[n]||{};s.defaultProps=a[n],C.components[n]=s}),r()(f).forEach(function(n){var s=C.components[n]||{};s.defaultProps=f[n],C.components[n]=s}),r()(b).forEach(function(n){var s=C.components[n]||{};s.styleOverrides=b[n],C.components[n]=s}),r()(m).forEach(function(n){var s=C.components[n]||{};s.styleOverrides=m[n],C.components[n]=s}),C.spacing=(0,l.Z)(n.spacing);var w=(0,u.Z)(n.breakpoints||{}),S=C.spacing;C.mixins=(0,c.Z)({gutters:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,c.Z)((0,c.Z)({paddingLeft:S(2),paddingRight:S(2)},n),{},(0,o.Z)({},w.up("sm"),(0,c.Z)({paddingLeft:S(3),paddingRight:S(3)},n[w.up("sm")])))}},t);var M=g.type,Z=g.mode,P=(0,p.Z)(g,k),T=Z||M||"light";return C.palette=(0,c.Z)({text:{hint:"dark"===T?"rgba(255, 255, 255, 0.5)":"rgba(0, 0, 0, 0.38)"},mode:T,type:T},P),C}var h=a(441473),g=a(910043),v=a(914942),f=a(212764);function y(n){for(var s=arguments.length,a=Array(s>1?s-1:0),e=1;e<s;e++)a[e-1]=arguments[e];return v.Z.apply(void 0,[(0,f.Z)({unstable_strictMode:!0},n)].concat(a))}var b=!1;function x(n){return b||(console.warn("MUI: createStyles from @mui/material/styles is deprecated.\nPlease use @mui/styles/createStyles"),b=!0),n}var C=a(567146),w=a(868786),S=a(645925),M=a(872035),Z=a(81367),P=a(433392),T=a(506877),V=a(523166);function j(){throw Error((0,e.Z)(14))}function B(){throw Error((0,e.Z)(15))}function H(){throw Error((0,e.Z)(16))}var A=a(248499),_=a(114610),R=a(946999),E=a(51899),I=a(746116),z=a(138039);function U(){throw Error((0,e.Z)(20))}},868786:function(n,s,a){"use strict";a.d(s,{Z:function(){return i}});var e=a(295649),t=a(117040),o=a(42302),c=a.n(o),p=a(567146);function i(n){var s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=s.breakpoints,o=s.disableAlign,i=void 0!==o&&o,r=s.factor,l=void 0===r?2:r,u=s.variants,d=(0,e.Z)({},n);d.typography=(0,e.Z)({},d.typography);var k=d.typography,m=(0,p.convertLength)(k.htmlFontSize),h=(void 0===a?["sm","md","lg"]:a).map(function(n){return d.breakpoints.values[n]});return(void 0===u?["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline"]:u).forEach(function(n){var s=k[n],a=c()(m(s.fontSize,"rem"));if(!(a<=1)){var o=1+(a-1)/l,r=s.lineHeight;if(!(0,p.isUnitless)(r)&&!i)throw Error((0,t.Z)(6));(0,p.isUnitless)(r)||(r=c()(m(r,"rem"))/c()(a));var u=null;i||(u=function(n){return(0,p.alignProperty)({size:n,grid:(0,p.fontGrid)({pixels:4,lineHeight:r,htmlFontSize:k.htmlFontSize})})}),k[n]=(0,e.Z)((0,e.Z)({},s),(0,p.responsiveProperty)({cssProperty:"fontSize",min:o,max:a,unit:"rem",breakpoints:h,transform:u}))}}),d}},523166:function(n,s,a){"use strict";a.d(s,{Z:function(){return p}}),a(827378);var e,t=a(592322),o=a(743547),c=a(824246);function p(n){var s=n.injectFirst,a=n.children;return s&&e?(0,c.jsx)(t.C,{value:e,children:a}):a}"object"==typeof document&&(e=(0,o.default)({key:"css",prepend:!0}))},267213:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/experimental-api/css-theme-variables/usage",function(){return a(468073)}])}},function(n){n.O(0,[2581,39456,54472,74048,93526,55308,15794,20933,45038,14738,58849,79125,19158,92807,53280,37853,12094,90565,51147,89150,42522,38665,91963,48499,49774,92888,40179],function(){return n(n.s=267213)}),_N_E=n.O()}]);